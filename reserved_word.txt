Loop/condition: ------------------

if
else
for
while

break
continue

return

Type: ----------------------------

i8
i16
i32
i64

u8
u16
u32
u64

f32
f64

void

str

tab

func

Opérateur Binaire: ---------------------

or
and
nand
xor
not
rshft
lshft
+
-
*
/
=

Opérateur de comparaison: -----------

==
!=
<
>
<=
>=

Blocs: --------------------------

(
)
[
]
{
}

String/char: ---------------
"
'

Autre: ---------------------------

;
,
.
:










Opérateur string:

copy
concat -> nv string concat
remove -> nv string sans carac
compare -> renvoie la valeur de la diff de la première diff
insert -> nv string avec insertion a l'endroit t
reverse -> nv string inverse tout caracat
contain -> renvoie true ou false
locate -> renvoie un tableau avec toute les position
replace -> nv string
trim -> nv string qui supprime les espaces avant/après
uppercase -> nv string tout en maj
lowercase -> nv string tout en min


remove(abcdefg,cde) -> abfg
